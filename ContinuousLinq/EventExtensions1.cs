
// <autogenerated>
// This code was generated by a tool. Any changes made manually will be lost
// the next time this code is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Text;
using System.ComponentModel;

namespace System {

    [System.Diagnostics.DebuggerStepThrough]
    public static class EventExtensions {
		public static void Raise(this EventHandler handler, object sender, EventArgs args) {
            if (handler != null)
                handler(sender, args);
        }
    
        public static void Raise<T>(this EventHandler<T> handler, object sender, T args) where T : EventArgs {
            if (handler != null)
                handler(sender, args);
        }

        public static void Raise(this PropertyChangingEventHandler handler, object sender, PropertyChangingEventArgs e) {
            if (handler != null)
                handler(sender, e);
        }

        public static void Raise(this PropertyChangedEventHandler handler, object sender, PropertyChangedEventArgs e) {
            if (handler != null)
                handler(sender, e);
        }

        public static void Raise(this NotifyCollectionChangedEventHandler handler, object sender, NotifyCollectionChangedEventArgs e) {
            if (handler != null)
                handler(sender, e);
        }

        public static void Raise(this Action handler) {
            if (handler != null)
                handler();
        }
        public static void Raise<T1>(this Action<T1> handler, T1 t1) {
            if (handler != null)
                handler(t1);
        }
        public static void Raise<T1,T2>(this Action<T1,T2> handler, T1 t1, T2 t2) {
            if (handler != null)
                handler(t1, t2);
        }
        public static void Raise<T1,T2,T3>(this Action<T1,T2,T3> handler, T1 t1, T2 t2, T3 t3) {
            if (handler != null)
                handler(t1, t2, t3);
        }
        public static void Raise<T1,T2,T3,T4>(this Action<T1,T2,T3,T4> handler, T1 t1, T2 t2, T3 t3, T4 t4) {
            if (handler != null)
                handler(t1, t2, t3, t4);
        }
        public static void Raise<T1,T2,T3,T4,T5>(this Action<T1,T2,T3,T4,T5> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6>(this Action<T1,T2,T3,T4,T5,T6> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6,T7>(this Action<T1,T2,T3,T4,T5,T6,T7> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6, t7);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6,T7,T8>(this Action<T1,T2,T3,T4,T5,T6,T7,T8> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6, t7, t8);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6,T7,T8,T9>(this Action<T1,T2,T3,T4,T5,T6,T7,T8,T9> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6, t7, t8, t9);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(this Action<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>(this Action<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>(this Action<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11, T12 t12) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>(this Action<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11, T12 t12, T13 t13) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>(this Action<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11, T12 t12, T13 t13, T14 t14) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>(this Action<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11, T12 t12, T13 t13, T14 t14, T15 t15) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16>(this Action<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11, T12 t12, T13 t13, T14 t14, T15 t15, T16 t16) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17>(this Action<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11, T12 t12, T13 t13, T14 t14, T15 t15, T16 t16, T17 t17) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18>(this Action<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11, T12 t12, T13 t13, T14 t14, T15 t15, T16 t16, T17 t17, T18 t18) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19>(this Action<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11, T12 t12, T13 t13, T14 t14, T15 t15, T16 t16, T17 t17, T18 t18, T19 t19) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19);
        }
        public static void Raise<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20>(this Action<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20> handler, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11, T12 t12, T13 t13, T14 t14, T15 t15, T16 t16, T17 t17, T18 t18, T19 t19, T20 t20) {
            if (handler != null)
                handler(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20);
        }
    }
}

